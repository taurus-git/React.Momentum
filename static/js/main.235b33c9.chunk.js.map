{"version":3,"sources":["Dashboard/components/BackgroundImage.js","Dashboard/containers/Dashboard.js","Clock/Clock.js","Weather/constants/constatnts.js","Weather/reducers/city.js","Weather/reducers/index.js","Weather/apis/DailyForecast.js","Weather/components/AddCity.js","Weather/actions/index.js","localStorage.js","Weather/components/WeatherDetails.js","Weather/containers/WeatherForecast.js","Weather/containers/AddForecast.js","Weather/containers/App.js","Weather/index.js","Todo/constants/index.js","Todo/components/Link.js","Todo/containers/FilterLink.js","Todo/actions/index.js","Todo/components/Footer.js","Todo/containers/AddTodo.js","Todo/components/Todo.js","Todo/components/TodoList.js","Todo/containers/VisibleTodoList.js","Todo/components/App.js","Todo/reducers/todos.js","Todo/reducers/visibilityFilter.js","Todo/reducers/index.js","Todo/index.js","App.js","index.js"],"names":["BackgroundImage","imageUrl","className","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Dashboard","props","state","blur_hash","weatherDesc","this","getBackgroundUrlSource","a","forecast","Object","keys","length","constructor","currentWeatherDesc","weather","description","getBackgroundUrl","axios","get","params","query","per_page","orientation","headers","Authorization","image","randomNum","Math","floor","random","setState","data","results","urls","regular","prevProps","undefined","hash","width","React","Component","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","hour","minute","constants","ADD_CITY","DELETE_CITY","ADD_FORECAST","city","action","type","C","name","combineReducers","DailyForecast","weatherData","connect","input","dispatch","onSubmit","e","cityName","preventDefault","value","trim","ref","node","loadState","stateName","serializedState","localStorage","getItem","JSON","parse","err","saveState","stringify","setItem","WeatherDetails","weatherDescr","iconurl","icon","temp","round","main","wind","speed","src","alt","WeatherForecast","getWeatherDetails","source","persistedState","status","App","AddForecast","store","createStore","rootReducer","applyMiddleware","thunk","subscribe","throttle","getState","Index","ADD_TODO","TOGGLE_TODO","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","SET_VISIBILITY_FILTER","Link","active","children","onClick","disabled","marginLeft","ownProps","filter","visibilityFilter","Footer","FilterLink","text","id","v4","Todo","completed","textDecoration","TodoList","todos","toggleTodo","map","todo","getVisibleTodos","t","Error","VisibleTodoList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.235b33c9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BackgroundImage = ({imageUrl}) => {\n    return(\n        <div className=\"dashboard\" style={\n            {backgroundImage: `url(${imageUrl})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'cover',\n            backgroundRepeat: 'no-repeat'\n            }\n        } />\n    )\n}\n\nexport default BackgroundImage;","import React from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport {Blurhash} from \"react-blurhash\";\nimport BackgroundImage from \"../components/BackgroundImage\";\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: 'https://images.unsplash.com/photo-1543169863-46febf95f5e3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2089&q=80',\n            blur_hash: 'LRBNNNM{o#s:yZofR+t6ESt8jXR*',\n            weatherDesc: '',\n        }\n    }\n\n    componentWillMount() {\n        this.getBackgroundUrlSource();\n    }\n\n    async getBackgroundUrlSource() {\n        const forecast = this.props.forecast;\n\n        if (forecast && Object.keys(forecast).length !== 0 && forecast.constructor === Object) {\n            let currentWeatherDesc = forecast.weather[0].description;\n            await this.getBackgroundUrl(currentWeatherDesc)\n        }\n    }\n\n    async getBackgroundUrl(weatherDesc) {\n        let image = await axios.get('https://api.unsplash.com/search/photos', {\n            params: {\n                query: weatherDesc,\n                per_page: 100,\n                orientation: 'landscape',\n            },\n            headers: {\n                Authorization: 'Client-ID F0k0DI4K2Pqkxl87P8mdSBk9VEixFfR-j84mwZcbW9U'\n            }\n        });\n\n        let randomNum = Math.floor(Math.random(100)*10); // get more different images with the same forecast\n\n        this.setState({\n            imageUrl: image.data.results[randomNum].urls.regular,\n            blur_hash: image.data.results[randomNum].blur_hash\n        })\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.forecast.weather === undefined && this.state.weatherDesc === '') {\n            this.getBackgroundUrlSource();\n        }\n\n        if (this.props.forecast.weather !== undefined && prevProps.forecast.weather !== undefined) {\n            if (this.props.forecast.weather[0].description !== prevProps.forecast.weather[0].description) {\n                this.getBackgroundUrlSource();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"blur-background\">\n                     <Blurhash\n                        hash={this.state.blur_hash}\n                        width={'auto'}\n                    >\n                    </Blurhash>\n                </div>\n                <BackgroundImage imageUrl={this.state.imageUrl}/>\n            </div>\n        );\n    }\n\n}\n\nexport default Dashboard;","import React from 'react';\nimport './Clock.css';\n\nclass Clock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date(),\n        };\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            1000\n        )\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID)\n    }\n\n    tick() {\n        this.setState({\n            date: new Date()\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"date-wrapper\">\n                <span className=\"date\" >\n                    {this.state.date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n                </span>\n\n            </div>\n        );\n    }\n}\nexport default Clock;","const constants = {\n    ADD_CITY: 'ADD_CITY',\n    DELETE_CITY: 'DELETE_CITY',\n    ADD_FORECAST: 'ADD_FORECAST',\n}\n\nexport default constants;","import C from '../constants/constatnts';\n\nconst city = (state = '', action) => {\n    switch (action.type) {\n        case C.ADD_CITY:\n            return {...state, name: action.name};\n        case C.DELETE_CITY:\n            return '';\n        case C.ADD_FORECAST:\n            return {...state, forecast: action.forecast};\n        default:\n            return state;\n    }\n}\n\nexport default city;","import { combineReducers } from \"redux\";\nimport city from \"./city\";\n\nexport default combineReducers( {\n    city\n})","import axios from \"axios\";\n\nlet DailyForecast = async (city) => {\n    const corsProxyServer = 'https://cors-anywhere.herokuapp.com/';\n\n    let weatherData = await axios.get(\n        `${corsProxyServer}https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=b0e3cfcac6b3bb698bc3351ad3e21975`\n    )\n    return weatherData;\n}\n\nexport default DailyForecast;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {addCity, addForecast} from \"../actions\";\n\nconst AddCity = ({ dispatch }) => {\n    let input;\n    return (\n        <div className=\"add-city\">\n            <form onSubmit={e => {\n                e.preventDefault()\n                if (!input.value.trim()) {\n                    return;\n                }\n\n                dispatch(addForecast(input.value))\n                input.value = ''\n            }}>\n                <input ref={node => input = node}/>\n                <button type=\"submit\">Add City</button>\n            </form>\n        </div>\n    )\n}\n\nexport default connect()(AddCity)","import C from \"../constants/constatnts\";\nimport DailyForecast from \"../apis/DailyForecast\";\n\nexport const addCity = name => ({\n    type: C.ADD_CITY,\n    name\n})\n\nexport const deleteCity = () => ({\n    type: C.DELETE_CITY\n})\n\n/*export const addForecast = forecast => ({\n    type: C.ADD_FORECAST,\n    forecast: forecast + 2\n})*/\n\nexport const addForecast = cityName => async dispatch => {\n    const forecast = await DailyForecast(cityName)\n\n    dispatch({\n        type: C.ADD_FORECAST,\n        forecast\n    })\n}\n\n","export const loadState = stateName => {\n    try {\n        const serializedState = localStorage.getItem(stateName);\n        if(serializedState === null) {\n            return undefined;\n        }\n        return JSON.parse(serializedState);\n    } catch (err) {\n        return undefined;\n    }\n}\n\nexport const saveState = (state, name) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(name, serializedState)\n    } catch (err) {\n        // Ignore write errors\n    }\n}","import React from \"react\";\n\nconst WeatherDetails = ({forecast}) => {\n\n    let cityName = forecast.name;\n    let weatherDescr = forecast.weather[0].description;\n    let iconcode = forecast.weather[0].icon;\n    let iconurl = \"http://openweathermap.org/img/wn/\" + iconcode + \"@2x.png\";\n    let temp = Math.round(forecast.main.temp);\n    let wind = Math.round(forecast.wind.speed)\n\n    return(\n        <div className=\"weather-details\">\n            <h3>{cityName}</h3>\n            <div className=\"weather-info\">\n                <div>\n                    <img className=\"weather-icon\" src={iconurl} alt=\"current weather icon\"></img>\n                </div>\n                <div>\n                    <p>{temp} °C</p>\n                    <p>{wind} m/s</p>\n                    <p>{weatherDescr}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherDetails;","import React from \"react\";\nimport { loadState } from \"../../localStorage\";\nimport DashboardApp from \"../../Dashboard/containers/Dashboard\";\nimport WeatherDetails from \"../components/WeatherDetails\";\n\nconst WeatherForecast = ({ forecast }) => {\n\n    let getWeatherDetails = source => {\n        const persistedState = loadState('city');\n        if ((source !== undefined) && source.status === 200){ //data from input\n                return forecast.data\n            } else if (persistedState !== undefined) { // data from local storage\n                return persistedState.city.forecast.data\n            } else {\n            return {};\n        }\n    }\n\n    let weather = getWeatherDetails(forecast);\n\n    return(\n\n        <div>\n            <DashboardApp forecast={getWeatherDetails(forecast)} />\n            {(weather && Object.keys(weather).length !== 0 && weather.constructor === Object)\n                &&\n            <WeatherDetails forecast={getWeatherDetails(forecast)} />}\n        </div>\n    )\n}\n\nexport default WeatherForecast;","import { connect } from \"react-redux\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nconst mapStateToProps = state => ({\n    forecast: state.city.forecast,\n})\n\nexport default connect(\n    mapStateToProps\n)(WeatherForecast);\n","import React from \"react\";\nimport AddCity from \"../components/AddCity\";\nimport AddForecast from \"./AddForecast\";\n\nconst App = () => {\n    return(\n        /*<div className='forecast-wrapper'>*/\n        <div>\n            <AddCity />\n            <AddForecast />\n        </div>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nimport App from \"./containers/App\"\nimport './containers/Weather.css'\nimport throttle from \"lodash/throttle\";\nimport { loadState, saveState } from \"../localStorage\";\n\n//const persistedState = loadState('weather')\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nstore.subscribe(throttle(() => {\n    saveState({\n        city: store.getState().city\n    }, 'city')\n}, 1000))\n\nconst Index= () => {\n    return(\n        <Provider store={store}>\n            <App />\n        </Provider>\n    )\n}\n\nexport default Index;","const constants = {\n    ADD_TODO: 'ADD_TODO',\n    TOGGLE_TODO: 'TOGGLE_TODO',\n\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE',\n    SET_VISIBILITY_FILTER: 'SET_VISIBILITY_FILTER',\n}\n\nexport default constants;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Link = ({ active, children, onClick }) => (\n    <button\n        onClick={onClick}\n        disabled={active}\n        style={{\n            marginLeft: '4px',\n        }}\n    >\n        {children}\n    </button>\n)\n\nLink.propTypes = {\n    active: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onClick: PropTypes.func.isRequired\n}\n\nexport default Link","import { connect } from \"react-redux\";\nimport { setVisibilityFilter } from \"../actions\";\nimport Link from '../components/Link'\n\nconst mapStateToProps = (state, ownProps) => ({\n   active: ownProps.filter === state.visibilityFilter\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Link)","import C from '../constants';\nimport { v4 } from 'uuid';\n\nexport const addTodo = text => ({\n    type: C.ADD_TODO,\n    id: v4(),\n    text,\n})\n\nexport const setVisibilityFilter = filter => ({\n    type: C.SET_VISIBILITY_FILTER,\n    filter,\n})\n\nexport const toggleTodo = id => ({\n    type: C.TOGGLE_TODO,\n    id,\n})","import React from \"react\";\nimport FilterLink from \"../containers/FilterLink\";\nimport C from \"../constants\";\n\nconst Footer = () => (\n    <div>\n        <span>Show: </span>\n        <FilterLink filter={C.SHOW_ALL}>\n            All\n        </FilterLink>\n        <FilterLink filter={C.SHOW_ACTIVE}>\n            Active\n        </FilterLink>\n        <FilterLink filter={C.SHOW_COMPLETED}>\n            Completed\n        </FilterLink>\n    </div>\n)\n\nexport default Footer;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { addTodo } from \"../actions\";\n\nconst AddTodo = ({ dispatch }) => {\n    let input;\n\n    return (\n        <div>\n            <form onSubmit={e => {\n            e.preventDefault()\n            if (!input.value.trim()) {\n                return\n            }\n            dispatch(addTodo(input.value))\n            input.value = ''\n            }}>\n                <input ref={node => input = node} />\n                <button type=\"submit\">Add Todo</button>\n            </form>\n        </div>\n    )\n}\n\nexport default connect()(AddTodo)","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ onClick, completed, text }) => (\n    <li\n        onClick={onClick}\n        style={{\n            textDecoration: completed ? 'line-through' : 'none'\n        }}\n    >\n        {text}\n    </li>\n)\n\nTodo.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default Todo","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Todo from \"./Todo\";\n\nconst TodoList = ({ todos, toggleTodo }) => (\n    <ul>\n        {todos.map(todo =>\n            <Todo\n                key={todo.id}\n                {...todo}\n                onClick={() => toggleTodo(todo.id)}\n            />\n        )}\n    </ul>\n)\n\nTodoList.propTypes = {\n    todos: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        completed: PropTypes.bool.isRequired,\n        text: PropTypes.string.isRequired\n    }).isRequired).isRequired,\n    toggleTodo: PropTypes.func.isRequired\n}\n\nexport default TodoList","import { connect } from 'react-redux';\nimport { toggleTodo } from \"../actions\";\nimport TodoList from \"../components/TodoList\";\nimport C from \"../constants\";\n\nconst getVisibleTodos = (todos, filter) => {\n    switch (filter) {\n        case C.SHOW_ALL:\n            return todos\n        case C.SHOW_COMPLETED:\n            return todos.filter(t => t.completed)\n        case C.SHOW_ACTIVE:\n            return todos.filter(t => !t.completed)\n        default:\n            throw new Error('Unknown filter: ' + filter)\n    }\n}\n\nconst mapStateToProps = state => ({\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList)","import React from \"react\";\nimport Footer from \"./Footer\";\nimport AddTodo from \"../containers/AddTodo\";\nimport VisibleTodoList from \"../containers/VisibleTodoList\";\n\nconst App = () => (\n    <div className=\"todo-wrapper\">\n        <AddTodo />\n        <VisibleTodoList />\n        <Footer />\n    </div>\n)\n\nexport default App;","import C from '../constants';\n\nconst todos = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    text: action.text,\n                    completed: false\n                }\n            ]\n        case C.TOGGLE_TODO:\n            return state.map(todo =>\n                (todo.id === action.id)\n                    ? {...todo, completed: !todo.completed}\n                    : todo\n            )\n        default:\n            return state\n    }\n}\n\nexport default todos","import C from '../constants'\n\nconst visibilityFilter = (state = C.SHOW_ALL, action) => {\n    switch (action.type) {\n        case C.SET_VISIBILITY_FILTER:\n            return action.filter\n        default:\n            return state\n    }\n}\n\nexport default visibilityFilter","import { combineReducers } from \"redux\";\nimport todos from \"./todos\";\nimport visibilityFilter from \"./visibilityFilter\";\n\nexport default combineReducers({\n    todos,\n    visibilityFilter\n})","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport rootReducer from \"./reducers\";\nimport { loadState, saveState } from \"../localStorage\";\nimport \"./index.css\";\nimport throttle from \"lodash/throttle\";\n\nconst persistedState = loadState('todos');\nconst store = createStore(rootReducer, persistedState);\n\nstore.subscribe(throttle(() => {\n    saveState({\n        todos: store.getState().todos\n    }, 'todos')\n}, 1000))\n\nconst Todo = () => {\n    return (\n        <Provider store={store}>\n            <App/>\n        </Provider>)\n}\n\nexport default Todo;","import React from 'react';\nimport DashboardApp from \"./Dashboard/containers/Dashboard\";\nimport ClockApp from \"./Clock/Clock\";\nimport WeatherApp from \"./Weather\"\nimport TodoList from \"./Todo\";\nimport './App.css';\n\nfunction App () {\n    return (\n        <>\n            <ClockApp />\n            <WeatherApp />\n            <TodoList />\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}